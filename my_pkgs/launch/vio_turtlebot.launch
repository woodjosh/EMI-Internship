<launch>
  <!-- turtlebot bringup -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="burger"/>
  </include>
    
  <!-- decompress images from the turtlebot --> 
  <node pkg="image_transport" type="republish" name="compressed_to_raw"
    args="compressed in:=/raspicam_node/image/ raw out:=/camera/image_raw" />
<?ignore
  <!-- use complementary filter with analog gyros and the built in imu -->
  <include file="$(find my_pkgs)/launch/filter_analog_gyro.launch"/>
?>
  <!-- launch orb_slam2 -->
  <include file="$(find orb_slam2_ros)/ros/launch/orb_slam2_raspi_mono.launch"/>

  <!-- my node to add covariance to orb_slam2 output --> 
  <node pkg="my_pkgs" type="add_cov" name="orb_cov" clear_params="true" args="_covariance:=0.0005 _for_fusion:=true"/>

  <!-- my node to add covariance to orb_slam2 output --> 
  <node pkg="my_pkgs" type="add_cov" name="orb_cov2" clear_params="true" args="_covariance:=0 _for_fusion:=false"/>
  
  <!-- publish transform between map and odom -->
  <node pkg="tf" type="static_transform_publisher" name="odom_to_map" args="0 0 0 0 0 0 1.0 map odom 100" />

  <!-- imu + encoder estimate of the position -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_imu_enc" clear_params="true">
    <remap from="/odometry/filtered" to="/localization/imu_enc"/>
    <rosparam command="load" file="$(find robot_localization)/params/imu_enc.yaml" />
  </node> 

  <!-- imu + encoder estimate of the position -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_CRS03_enc" clear_params="true">
    <remap from="/imu" to="/CRS03"/>
    <remap from="/odometry/filtered" to="/localization/CRS03_enc"/>
    <rosparam command="load" file="$(find robot_localization)/params/imu_enc.yaml" />
  </node> 

  <!-- imu + encoder estimate of the position -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_CRS09_enc" clear_params="true">
    <remap from="/imu" to="/CRS09"/>
    <remap from="/odometry/filtered" to="/localization/CRS09_enc"/>
    <rosparam command="load" file="$(find robot_localization)/params/imu_enc.yaml" />
  </node> 

<?ignore
  <!-- camera estimate of the position -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_orbslam" clear_params="true">
    <remap from="/odometry/filtered" to="/localization/orbslam"/>
    <rosparam command="load" file="$(find robot_localization)/params/orbslam.yaml" />
  </node>

  <!-- camera+imu+encoder estimate of the position -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_vis_imu_enc" clear_params="true">
    <remap from="/odometry/filtered" to="/localization/vio"/>
    <rosparam command="load" file="$(find robot_localization)/params/vis_imu_enc.yaml" />
  </node> 
?>
  <!-- visualize results --> 
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_localization)/rviz/turtlebot_real_localization.rviz"/> 
<?ignore
  <!-- Run recorded teleop velocity commands --> 
  <node pkg="rosbag" type="play" name="rosplay" args="$(find my_pkgs)/velocity_commands/1m_circle_3min.bag" required="true"/> 

  <!-- record outputs --> 
  <node pkg="rosbag" type="record" name="rosrecord" args="-O $(find my_pkgs)/datasets/1m_circle_3.bag /localization/imu_enc /localization/orbslam /localization/vio"/> 
?>
</launch>
