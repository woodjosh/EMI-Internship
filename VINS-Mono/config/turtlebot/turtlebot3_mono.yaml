%YAML:1.0

#common parameters
imu_topic: "/imu"
image_topic: "/camera/rgb/image_raw"
output_path: "/home/josh/output/"

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 960
image_height: 540
distortion_parameters:
   k1: 0
   k2: 0
   p1: 0
   p2: 0
projection_parameters:
   fx: 603.4448859766177
   fy: 603.4448859766177
   cx: 480.5
   cy: 270.5
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

#rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 0,   0., 1., 
          -1.,  0., 0., 
           0., -1., 0. ]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.069,-0.047, 0.039]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking # 150
min_dist: 30            # min distance between two features # 30
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1          # ransac threshold (pixel) # 1 
show_track: 1           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time # 0.04
max_num_iterations: 8   # max solver itrations, to guarantee real time # 8
keyframe_parallax: 10.0 # keyframe selection threshold (pixel) # 10

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 1.7e-2         # accelerometer measurement noise standard deviation. 
gyr_n: 2.0e-4         # gyroscope measurement noise standard deviation.
acc_w: 0.001          # accelerometer bias random work noise standard deviation.  
gyr_w: 8.0e-7         # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007       # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure
fast_relocalization: 1             # useful in real-time and large project
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/tony-ws1/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.033               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
